- content_for :head do
  != javascript_include_tag 'jquery.sparkline.min'
  != javascript_include_tag 'jquery.tablesorter.min.js'
  :javascript
    $(document).ready(function() {
      $('.sparkline').sparkline('html', { enableTagOptions: true });
      $('.nav .reports').addClass('active');
      $('#burn_rates').tablesorter({ sortList: [[1,0]] });
    });
    
  :css
    tr.underestimated, tr.underestimated td {
        background-color: #ffe8e8 !important;
    }

    tr.overestimated, tr.overestimated td {
        background-color: #ffffe0 !important;
    }

.page-header
  %h1
    Trends
.row
  .span16

    - if current_user.stories.empty?
      %p
        You haven't entered any estimates. 
        != link_to 'Add some', stories_path
        or 
        != link_to 'import them from a CSV file', new_import_path
    - else

      #dashboard
        .section
          %h2 Hours Per Point
          %em
            != smoothed_data_series_sparkline @burn_rates
            = @burn_rates.last(10).mean.round.to_i
          development hours per point
          = normal_range @burn_rates

      #average_burn_rate
        %h2 Actuals
        %table
          %tr
            %th.estimate_group
              Estimate Size
            %th.newest_10
              Range, Last 10
            %th.newest_30{:colspan => 2}
              Range, Last 30
            %th.all
              Range, All
          - @actuals_by_bucket.each do |bucket_size, actuals|
            = render :partial => "actual_row", :locals => { :title => bucket_size, :actuals => actuals}
          = render :partial => "actual_row", :locals => { :title => "All - Story", :actuals => @all_actuals}
          = render :partial => "actual_row", :locals => { :title => "All - Point", :actuals => @all_actuals_normalized}

      #burn_rate
        %h2 Burn Rate Per Story
        %table#burn_rates.zebra-striped
          %thead
            %tr
              %th.story Story
              %th.finished Finished
              %th.estimate Estimate
              %th.hours Hours Worked
              %th.burn_rate Burn Rate
              %th.status Hours vs. Average
          %tbody
            - @stories.each do |story|
              %tr{:class => "#{story.status(@all_actuals_by_estimate[story.estimate])}",
                  :title => "average for #{format_estimate(story.estimate)} point story is #{to_html_attribute @all_actuals_by_estimate[story.estimate]}"}
                %td.story
                  != format_title story.title
                %td.finished
                  = format_date story.finished
                %td.estimate
                  = format_estimate story.estimate
                %td.hours
                  = story.hours_worked
                %td.burn_rate
                  = story.burn_rate.round.to_i
                %td.status
                  != format_variance story.variance_vs_mean(@all_actuals_by_estimate[story.estimate])
